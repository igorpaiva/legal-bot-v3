services:
  # Main application
  legal-bot:
    build: .
    container_name: legal-bot-app
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_PATH=/app/data/legal-bot.db
      - BACKUP_DIR=/app/backups
      - LOG_FILE=/app/logs/application.log
    volumes:
      - ./data:/app/data
      - ./sessions:/app/sessions
      - ./backups:/app/backups
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - legal-bot-network
    labels:
      - "com.legal-bot.service=main"
      - "com.legal-bot.environment=production"

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: legal-bot-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    networks:
      - legal-bot-network
    labels:
      - "com.legal-bot.service=cache"

  # NGINX reverse proxy
  nginx:
    image: nginx:alpine
    container_name: legal-bot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./client/dist:/var/www/html:ro
    depends_on:
      - legal-bot
    networks:
      - legal-bot-network
    labels:
      - "com.legal-bot.service=proxy"

  # Database backup service
  backup:
    build: .
    container_name: legal-bot-backup
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - BACKUP_ONLY=true
    volumes:
      - ./data:/app/data:ro
      - ./backups:/app/backups
      - ./scripts:/app/scripts
    env_file:
      - .env
    command: node scripts/backup-scheduler.js
    networks:
      - legal-bot-network
    labels:
      - "com.legal-bot.service=backup"

  # Monitoring service
  prometheus:
    image: prom/prometheus:latest
    container_name: legal-bot-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - legal-bot-network
    labels:
      - "com.legal-bot.service=monitoring"

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: legal-bot-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - legal-bot-network
    labels:
      - "com.legal-bot.service=dashboard"

  # Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: legal-bot-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki.yml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - legal-bot-network
    labels:
      - "com.legal-bot.service=logs"

  # Log shipping
  promtail:
    image: grafana/promtail:latest
    container_name: legal-bot-promtail
    restart: unless-stopped
    volumes:
      - ./logs:/var/log/legal-bot:ro
      - ./monitoring/promtail.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - legal-bot-network
    labels:
      - "com.legal-bot.service=log-shipper"

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  loki-data:
    driver: local

networks:
  legal-bot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
